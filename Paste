import pandas as pd
import sys
import argparse

def modify_vm_template_column(csv_file_path, output_file_path=None):
    """
    Lit un fichier CSV et modifie la colonne vm_template pour remplacer
    toutes les occurrences de 'V-' par 'V-ISIOPERATION'
    
    Args:
        csv_file_path (str): Chemin vers le fichier CSV d'entrée
        output_file_path (str): Chemin vers le fichier CSV de sortie (optionnel)
    """
    try:
        # Lire le fichier CSV
        df = pd.read_csv(csv_file_path)
        
        # Vérifier si la colonne vm_template existe
        if 'vm_template' not in df.columns:
            print(f"Erreur: La colonne 'vm_template' n'existe pas dans le fichier {csv_file_path}")
            print(f"Colonnes disponibles: {list(df.columns)}")
            return False
        
        # Afficher les premières lignes avant modification
        print("Données avant modification:")
        print(df[['vm_template']].head())
        print()
        
        # Modifier la colonne vm_template
        df['vm_template'] = df['vm_template'].astype(str).str.replace('V-', 'V-ISIOPERATION', regex=False)
        
        # Afficher les premières lignes après modification
        print("Données après modification:")
        print(df[['vm_template']].head())
        print()
        
        # Définir le fichier de sortie
        if output_file_path is None:
            output_file_path = csv_file_path.replace('.csv', '_modified.csv')
        
        # Sauvegarder le fichier modifié
        df.to_csv(output_file_path, index=False)
        print(f"Fichier modifié sauvegardé sous: {output_file_path}")
        
        return True
        
    except FileNotFoundError:
        print(f"Erreur: Le fichier {csv_file_path} n'a pas été trouvé.")
        return False
    except Exception as e:
        print(f"Erreur lors du traitement: {str(e)}")
        return False

def main():
    parser = argparse.ArgumentParser(description='Modifier la colonne vm_template dans un fichier CSV')
    parser.add_argument('csv_file', help='Chemin vers le fichier CSV à modifier')
    parser.add_argument('-o', '--output', help='Chemin vers le fichier de sortie (optionnel)')
    
    args = parser.parse_args()
    
    # Exécuter la modification
    success = modify_vm_template_column(args.csv_file, args.output)
    
    if success:
        print("Modification terminée avec succès!")
    else:
        print("Échec de la modification.")
        sys.exit(1)

if __name__ == "__main__":
    main()

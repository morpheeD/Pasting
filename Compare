import pandas as pd
import click

@click.command()
@click.argument('original_csv', type=click.Path(exists=True))
@click.argument('updated_csv', type=click.Path(exists=True))
@click.option('--output', default='output.csv', help='Nom du fichier de sortie')
def compare_csv(original_csv, updated_csv, output):
    """
    Compare deux fichiers CSV et génère un nouveau fichier avec les règles suivantes :
    - Pour toutes les colonnes sauf num_cpu, memory, disk_1_taille, disk_2_taille, disk_3_taille,
      prend les valeurs du fichier original
    - Pour les colonnes en exception, prend les valeurs du fichier mis à jour
    """

    # Charger les fichiers CSV
    original_df = pd.read_csv(original_csv)
    updated_df = pd.read_csv(updated_csv)

    # Vérifier que les DataFrames ont les mêmes lignes
    if len(original_df) != len(updated_df):
        raise ValueError("Les fichiers CSV n'ont pas le même nombre de lignes")

    # Colonnes à prendre depuis le fichier mis à jour
    update_columns = ['num_cpu', 'memory', 'disk_1_taille', 'disk_2_taille', 'disk_3_taille']

    # Créer un nouveau DataFrame
    result_df = original_df.copy()

    # Mettre à jour les colonnes spécifiées
    for col in update_columns:
        if col in updated_df.columns:
            result_df[col] = updated_df[col]
        else:
            print(f"Attention: la colonne '{col}' n'existe pas dans le fichier mis à jour")

    # Sauvegarder le résultat
    result_df.to_csv(output, index=False)
    print(f"Fichier de sortie généré: {output}")

if __name__ == '__main__':
    compare_csv()
